Things that I would like to do someday ...

- 13 Jan 2019 - Add a function that when sitting on an arbitrary file name in a
   buffer will open that file.  Right now shu-project can open a file that is part
   of a project.  This would be a simple function that tries to open the file if it
   looks like a file name.  An example might be:

  /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/string.g



- 14 Jan 2019 - shu-replace-class-name calls shu-internal-replace-class-name to do
  the replacement.  But shu-internal-replace-class-name will not replace anything
  that is prefixed by ":".  That is because it was originally intended to add a
  namespace to a class and does not want to do that to a class that already has a
  namespace.  But in the case of class name replacement, we do want to replace
  qualified names.

- 16 Jan 2019 - shu-cpp-rmv-using will detect a class conflict if the same namespace
  is named twice, i.e. "using namespace std" twice in same file.  Need to filter
  duplicates before doing conflict checks.  DONE as of 1-25-19

- 16 Jan 2019 - shu-qualify-class name should put all of the classes into a single
  regexp.  That way you can do an entire file in one pass.  You find a match in the
  class name, look up its associated namespace, and then do the qulification.  So
  instead of one iteration per class or one iteration per namespace, you can do the
  entire thing in one iteration.  Use the logic from shu-cpp-rmv-blocked to build a
  reverse index of class to namespace.

- 18 Jan 2019 - In shu-internal-replace-class-name, if the class name is either
  surrounded by parens foo(std::time) or followed by an equal sign
  "int std::time = ", it is unlikely to be a class name.

  Here is the hard one.  If it is preceded by something that looks like a class
  name:

  bdlt::Datetime  time;

  "time" is very unlikely to be a class name.

- 21 Jan 2019 - Might be useful to allow people to enter their own short name for a
  file.  e.g., a frequently visited file has two long names to which it maps.  Have
  some way to indicate that a different, user supplied name maps to one of them.


- 25 Jan 2019 - Look into having shu-number-lines use (rectangle-number-lines)

- 29 Jan 2019 - New way to generate include file name

      Put corsor on alice::MumbleBob and have function generate
      #include <alice_mumblebob.h>

- 1 Feb 2019

      Extend the above for names of the form alice_MumbleBob

- 1 Feb 2019

  shu-hother, shu-tother, shu-cother just form the file name and try to open it in
  the current directoty.  But if your test files are in a unit_test directory, your
  code files in a src directory and the header files in an include directory this
  does not work.

  However, if a project exists, it knows where all of the tiles are.  You should be
  able to pass the name to the shu-project code and have it find it for you.
